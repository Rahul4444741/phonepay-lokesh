stages:
  - analysis
  - build
  - push

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/phonepe-employee-fe
  DOCKERHUB_IMAGE_NAME: dhavalpatel262/phonepe-employee-fe

.docker_login: &docker_login
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

sonarqube-analysis:
  stage: analysis
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner 
        -Dsonar.projectKey=phonepe-employee-fe 
        -Dsonar.sources=. 
        -Dsonar.host.url=$SONAR_HOST_URL 
        -Dsonar.login=$SONAR_TOKEN
  allow_failure: true
  only:
    - main
    - /^sprint-.*$/
    - /^release.*$/

build-and-push:
  stage: build
  image: docker:20.10.7
  services:
    - docker:20.10.7-dind
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        TAG: "uat"
    - if: $CI_COMMIT_BRANCH =~ /^sprint-.*$/
      variables:
        TAG: "dev"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
      variables:
        TAG: "prod"
    - when: never  # Skip for all other branches
  <<: *docker_login
  script:
    - >
      docker build 
      --build-arg NODE_OPTIONS="--max-old-space-size=16384" 
      --build-arg NODE_ENV=production 
      --memory=16g 
      --memory-swap=16g 
      --progress=plain
      --no-cache
      -t $IMAGE_NAME:$CI_PIPELINE_IID .
    - docker tag $IMAGE_NAME:$CI_PIPELINE_IID $IMAGE_NAME:$TAG
    - docker tag $IMAGE_NAME:$CI_PIPELINE_IID $DOCKERHUB_IMAGE_NAME:$TAG
    - docker push $IMAGE_NAME:$CI_PIPELINE_IID
    - docker push $IMAGE_NAME:$TAG
    - docker push $DOCKERHUB_IMAGE_NAME:$TAG